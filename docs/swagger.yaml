basePath: /
definitions:
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: integer
    type: object
  request.Inspect:
    properties:
      state:
        type: integer
      taskId:
        type: integer
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.Record:
    properties:
      recordId:
        type: integer
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: integer
        type: array
      id:
        type: integer
    type: object
  system.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: integer
      authorityName:
        description: 角色名
        type: string
      createBy:
        description: 创建人
        type: integer
      createdAt:
        description: 创建时间
        type: string
      dataScope:
        type: string
      depts:
        items:
          $ref: '#/definitions/system.SysDept'
        type: array
      level:
        type: integer
      menus:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      updateBy:
        description: 更新人
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/system.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/system.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createBy:
        description: 创建人
        type: integer
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/system.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updateBy:
        description: 更新人
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
  system.SysBaseMenuParameter:
    properties:
      createBy:
        description: 创建人
        type: integer
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updateBy:
        description: 更新人
        type: integer
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  system.SysDept:
    properties:
      createBy:
        description: 创建人
        type: integer
      createdAt:
        description: 创建时间
        type: string
      deptName:
        type: string
      deptSort:
        type: integer
      id:
        description: 主键ID
        type: integer
      partenID:
        type: integer
      updateBy:
        description: 更新人
        type: integer
      updatedAt:
        description: 更新时间
        type: string
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  title: Work Flow API
  version: 0.0.1
paths:
  /app/create:
    post:
      parameters:
      - description: 创建人
        in: body
        name: data
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建表单成功"}'
          schema:
            type: string
      summary: 创建表单
      tags:
      - App
  /app/empty:
    get:
      parameters:
      - in: query
        name: appId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"null"}'
          schema:
            type: string
      summary: 返回空表单
      tags:
      - App
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
  /authority/updateAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/system.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拉黑成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /record/data:
    get:
      parameters:
      - in: query
        name: recordId
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"null"}'
          schema:
            type: string
      summary: 返回之前填写过的表单数据
      tags:
      - Record
  /record/schedule:
    get:
      parameters:
      - description: 创建人
        in: body
        name: data
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询我发起的任务成功"}'
          schema:
            type: string
      summary: 我发起的
      tags:
      - record
  /record/submit:
    post:
      parameters:
      - description: string
        in: body
        name: data
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"null"}'
          schema:
            type: ""
      summary: 提交表单
      tags:
      - Record
  /task/dynamic:
    get:
      parameters:
      - description: 记录id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Record'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"ok"}'
          schema:
            type: string
      summary: 流程动态信息
      tags:
      - Task
  /task/inspect:
    put:
      parameters:
      - description: 任务id，状态
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Inspect'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"已审核"}'
          schema:
            type: string
      summary: 审批（通过||拒绝）
      tags:
      - Task
  /task/receive:
    get:
      parameters:
      - description: 节点类型
        in: query
        name: data
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询我收到的任务成功"}'
          schema:
            type: string
      summary: 我收到的
      tags:
      - Task
  /task/schedule:
    get:
      parameters:
      - description: 审批状态, 审批人
        in: body
        name: data
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询待办任务成功"}'
          schema:
            type: string
      summary: 我的待办
      tags:
      - Task
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除用户
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户角色
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
